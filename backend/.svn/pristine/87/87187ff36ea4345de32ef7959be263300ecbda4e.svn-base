package cn.iocoder.yudao.module.campus.convert;

import cn.iocoder.yudao.module.campus.controller.admin.vo.temprecord.TempRecordPreviewRespVO;
import cn.iocoder.yudao.module.campus.controller.admin.vo.temprecord.TempRecordRespVO;
import cn.iocoder.yudao.module.campus.controller.admin.vo.temprecord.TempRecordSimpleRespVO;
import cn.iocoder.yudao.module.campus.dal.dataobject.TempRecordDO;
import cn.iocoder.yudao.module.system.dal.dataobject.dept.DeptDO;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

import java.util.List;
import java.util.Map;

@Mapper
public interface TempRecordConvert {

    TempRecordConvert INSTANCE = Mappers.getMapper(TempRecordConvert.class);

    List<TempRecordRespVO> convertList(List<TempRecordDO> list);

    TempRecordRespVO convert(TempRecordDO recordDO);

    List<TempRecordSimpleRespVO> convert(List<TempRecordDO> records);

    default List<TempRecordPreviewRespVO> convertGrade(List<TempRecordPreviewRespVO> vos, Map<Long, DeptDO> deptMap) {
        for (TempRecordPreviewRespVO vo : vos) {
            DeptDO dept = deptMap.get(vo.getDeptId());
            if (dept != null) {
                vo.setCampusGradeName(dept.getName());
            }
        }
        return vos;
    }

    default List<TempRecordPreviewRespVO> convertClass(List<TempRecordPreviewRespVO> vos, Map<Long, DeptDO> deptMap) {
        for (TempRecordPreviewRespVO vo : vos) {
            vo.setCampusClassName(deptMap.get(vo.getDeptId()).getName());
            vo.setCampusGradeName(deptMap.get(deptMap.get(vo.getDeptId()).getParentId()).getName());
        }
        return vos;
    }


}
